{"version":3,"sources":["Currency.js","Navbar.js","Rates.js","App.js","reportWebVitals.js","index.js"],"names":["Currency","currencyOptions","selectedCurrency","onChangeCurrency","onChangeAmount","amount","curr","toAmount","onChangeToCurrency","className","htmlFor","id","value","onChange","map","option","type","style","color","background","border","Navbar","to","Rates","useState","currencyRates","setCurrencyRates","currencyNames","setCurrencyNames","useEffect","a","getRates","getCurrencyName","fetch","response","json","data","rates","Object","keys","item","BASE_URL","App","setCurrencyOptions","fromCurrency","setFromCurrency","toCurrency","setToCurrency","exchangeRate","setExchangeRate","setAmount","then","res","key","sort","key1","key2","temp","i","length","firstCurrency","base","Fragment","e","target","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","exact","path","component","document","getElementById"],"mappings":"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","file":"static/js/main.71603d02.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\nconst Currency = ({\r\n  currencyOptions,\r\n  selectedCurrency,\r\n  onChangeCurrency,\r\n  onChangeAmount,\r\n  amount,\r\n  curr,\r\n  toAmount,\r\n  onChangeToCurrency,\r\n}) => {\r\n  return (\r\n    <div className=\"container\"> \r\n    <form>\r\n        <div className=\"form-row\">\r\n            <div className=\"form-group col-md-3\">\r\n            <label htmlFor=\"input-currency\">Currency</label>\r\n            <select id=\"input-currency\" className=\"form-control\" value={selectedCurrency} onChange={onChangeCurrency}>\r\n                {currencyOptions.map((option) => (\r\n                    <option key={option} value={option}>\r\n                    {option}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n            </div>\r\n            <div className=\"form-group col-md-3\">\r\n                <label htmlFor=\"output-currency\">Currency</label>\r\n                <select id=\"output-currency\" className=\"form-control\" value={curr} onChange={onChangeToCurrency}>\r\n                    {currencyOptions.map((option) => (\r\n                    <option key={option} value={option}>\r\n                    {option}\r\n                    </option>\r\n                ))}\r\n                </select>\r\n            </div>\r\n            </div>\r\n            <div className=\"form-row\">\r\n            <div className=\"form-group col-md-3\">\r\n                <label htmlFor=\"input-amount\">Enter amount</label>\r\n                <input type=\"number\" className=\"form-control\" id=\"input-amount\" value={amount} onChange={onChangeAmount}/>\r\n            </div>\r\n            <div className=\"form-group col-md-3\">\r\n                <label htmlFor=\"output-amount\">Converted amount</label>\r\n                <p style={{ color: \"black\", background: \"white\", border: \"1px\",}} className=\"rounded\">{toAmount}</p>\r\n            </div>\r\n            </div>\r\n    </form>\r\n    </div>\r\n    \r\n  );\r\n};\r\nexport default Currency;\r\n","import React from \"react\";\r\nimport './App.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\n\r\nconst Navbar = () => {\r\n    return(\r\n   \r\n      <nav>\r\n        <ul className=\"nav-links\">\r\n            <Link to=\"/\">\r\n            <li>CURRENCY CONVERTER</li>\r\n            </Link>\r\n            <Link to=\"/Rates\">\r\n            <li>CURRENT EXCHANGE RATES</li>\r\n            </Link>\r\n        </ul>\r\n      </nav>\r\n   \r\n    \r\n    );\r\n}\r\n\r\nexport default Navbar;","import React, {  useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\n\r\n\r\n\r\nconst Rates = () => {\r\n\r\n    const BASE_URL = \"https://api.exchangeratesapi.io/latest?base=USD\";\r\n    const CURRENCYNAME_URL = \"https://openexchangerates.org/api/currencies.json\";\r\n\r\n    const[currencyRates , setCurrencyRates] = useState({});\r\n    const[currencyNames, setCurrencyNames] = useState({});\r\n\r\n\r\n    useEffect( async () => {\r\n        getRates();\r\n        getCurrencyName();\r\n\r\n    }); \r\n\r\n    const getRates = async () => {\r\n        const response = await fetch(BASE_URL);\r\n        const data = await response.json();\r\n        setCurrencyRates(data.rates);    \r\n    };\r\n\r\n    const getCurrencyName = async () => {\r\n        const response = await fetch(CURRENCYNAME_URL);\r\n        const data = await response.json();\r\n        setCurrencyNames(data);\r\n    \r\n    };\r\n    \r\n    return (\r\n        \r\n        <div className = \"container\">\r\n            <section id=\"title\">\r\n            <h3>US Dollar(USD) Exchange Rates</h3>\r\n            </section>\r\n            <div>\r\n                <table className=\"table1\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>Currency</th>\r\n                                        <th>Currency Name</th>\r\n                                        <th>Exchange Rate = 1 USD</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                 {Object.keys(currencyRates).map((item) => {\r\n                                       return ( \r\n                                    <tr>\r\n                                        <td>{item}</td>\r\n                                        <td>{currencyNames[item]}</td>\r\n                                        <td>{currencyRates[item]}</td>\r\n                                    </tr>\r\n                                );\r\n                                })}\r\n                    </tbody> \r\n                </table>\r\n            </div>\r\n            \r\n\r\n        </div>\r\n\r\n    );\r\n\r\n};\r\n\r\nexport default Rates;","import React, {useEffect, useState} from 'react';\nimport ReactDOM from 'react';\nimport './App.css';\nimport Currency from './Currency';\nimport Navbar from './Navbar';\nimport Rates from './Rates';\nimport { Link } from 'react-router-dom';\n\n  \n\nconst BASE_URL = \"https://api.exchangeratesapi.io/latest\";\n\nconst App = () => {\n  const [currencyOptions, setCurrencyOptions] = useState([]);\n  const [fromCurrency, setFromCurrency] = useState();\n  const [toCurrency, setToCurrency] = useState();\n  const [exchangeRate, setExchangeRate] = useState();\n  const [amount, setAmount] = useState(1);\n\n  useEffect(() => {\n    fetch(BASE_URL)\n      .then((res) => res.json())\n      .then((data) => {\n        var key = Object.keys(data.rates).sort(function order(key1, key2) {\n          if (key1 < key2) return -1;\n          else if (key1 > key2) return +1;\n          else return 0;\n          \n        });\n      \n        // Taking the object in 'temp' object\n        // and deleting the original object.\n        var temp = {};\n        for (var i = 0; i < key.length; i++) {\n          temp[key[i]] = data.rates[key[i]];\n          delete data.rates[key[i]];\n        }\n\n        for (i = 0; i < key.length; i++) {\n          data.rates[key[i]] = temp[key[i]];\n        }\n\n        const firstCurrency = Object.keys(data.rates)[0];\n        setCurrencyOptions([data.base, ...Object.keys(data.rates)]);\n        setFromCurrency(data.base);\n        setToCurrency(firstCurrency);\n        setExchangeRate(data.rates[firstCurrency]);\n      });\n  }, []);\n\n  useEffect(() => {\n    if (fromCurrency != null && toCurrency != null) {\n      fetch(`${BASE_URL}?base=${fromCurrency}&symbols=${toCurrency}`)\n        .then((res) => res.json())\n        .then((data) => setExchangeRate(data.rates[toCurrency]));\n    }\n  }, [fromCurrency, toCurrency]);\n\n  function handleFromAmountChange(e) {\n    setAmount(e.target.value);\n  }\n\n  return (\n    <React.Fragment> \n\n    \n      <div className=\"container\">\n        \n      <section>\n      <h3>Curreny converter</h3>\n      <p>Please enter the amount you want to convert in any field</p>\n      </section>\n        <div>  \n           <Currency\n          currencyOptions={currencyOptions}\n          selectedCurrency={fromCurrency}\n          onChangeCurrency={(e) => setFromCurrency(e.target.value)}\n          onChangeAmount={handleFromAmountChange}\n          amount={amount}\n          curr={toCurrency}\n          onChangeToCurrency={(e) => setToCurrency(e.target.value)}\n          toAmount={amount * exchangeRate}\n        />\n       </div>\n       </div>\n\n    </React.Fragment>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Rates from './Rates';\nimport Navbar from './Navbar';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'; \n\n\nReactDOM.render(\n  <Router>\n          <Navbar />\n          <Switch>\n            <Route exact path=\"/\"  component= {App}/>\n            <Route exact path=\"/Rates\" component={Rates}/>\n          </Switch> \n      </Router>,\n  document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}